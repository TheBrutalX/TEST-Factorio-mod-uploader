name: Release

on:
    push:
        branches: 
          - main
        paths-ignore: 
          - '**.md'

jobs:
    tests:
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v4
              with:
                  fetch-depth: 0

            - name: Install dependencies
              run: npm ci

            - name: Run tests
              run: npm test
    build:
        runs-on: ubuntu-latest
        needs: [ tests ]

        steps:
            - uses: actions/checkout@v4
              with:
                fetch-depth: 0
                
            - name: Install dependencies
              run: npm ci

            - name: Build
              run: npm run build

            - name: App Authentication
              uses: actions/create-github-app-token@v1
              id: auth
              with:
                  app-id: ${{ vars.APP_ID }}
                  private-key: ${{ secrets.APP_KEY }}
                  owner: ${{ github.repository_owner }}

            - name: Commit bundle.js
              env:
                TOKEN: ${{ steps.auth.outputs.token }}
              run: |
                  git config user.name 'relese[bot]'
                  git config user.email 'release[bot]@users.noreply.github.com'
                  git remote set-url origin https://x-access-token:${TOKEN}@github.com/${{ github.repository }}.git

                  git add -f dist/
                  git add package*.json
                  git commit -m 'chore(release): Added bundle.js [skip ci]'
                  git push origin main

    release:
        needs: [ build ]
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v4
              with:
                  fetch-depth: 0

            - name: Get version
              id: version
              run: |
                VERSION=$(jq -r '.version' package.json)
                echo "VERSION=$VERSION" >> $GITHUB_OUTPUT

            - uses: actions/create-github-app-token@v1
              id: app-token
              with:
                app-id: ${{ env.BOT_APPID }}
                private-key: ${{ secrets.BOT_TOKEN }}
            
            - name: Create release
              env:
                GITHUB_TOKEN: ${{ steps.app-token.outputs.token }}
                VERSION: ${{ steps.version.outputs.VERSION }}
              run: |
                git config --global user.name 'github-actions[bot]'
                git config --global user.email 'github-actions[bot]@users.noreply.github.com'

                git config --global url."https://x-access-token:${GITHUB_TOKEN}@github.com/".insteadOf "https://github.com/"

                git tag "Release ${VERSION}" -m "Release ${VERSION}"
                git push origin "Release ${VERSION}"
            
            - name: Move latest tag
              env:
                GITHUB_TOKEN: ${{ steps.app-token.outputs.token }}
              run: |
                git tag -f latest
                git push origin latest --force
